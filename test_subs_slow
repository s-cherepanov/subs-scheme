#!/bin/bash

#
# Subs Scheme Interpreter
# Copyright (C) 2010 Andy Balaam
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

# Tests for the file interpreting interface of subs

function assert_equal()
{
    if [ "$1" != "$2" ]; then
    {
        echo "Assert failed: '"$1"' != '"$2"'."
        exit 1
    }; fi
}

# If we try to run a file that doesn't exist we should fail
./subs nonexistentfile 2> /dev/null && exit 1

# If we run an empty file we succeed
./subs testslow/empty.scm 2> /dev/null || exit 1




# Basic running a file
assert_equal `./subs testslow/fifteen.scm` "15"
assert_equal `./subs testslow/two_plus_three.scm` "5"

# Running a file containing multiple lines prints all results
RES=`./subs testslow/multiple_lines.scm`
RES=`echo -n $RES` # convert newline to space?
assert_equal "$RES" "5 -1"




# Running from stdin
assert_equal `echo "(- 12 3)" | ./subs -` "9"

# Printing the warranty is not an error
# TODO: echo "warranty" | ./subs > /dev/null 2>&1 || exit 1

# Printing the copying message is not an error
# TODO: echo "copying" | ./subs > /dev/null 2>&1 || exit 1



# If we try to do a session-test with a file that doesn't exist we should fail
./subs --session-test nonexistentfile 2> /dev/null && exit 1

# If we try to do a session-test with an empty file we should fail
./subs --session-test testslow/empty.scmsession 2> /dev/null && exit 1

# If we do a session-test that is incorrect we should fail
./subs --session-test testslow/incorrect.scmsession 2> /dev/null && exit 1
./subs --session-test testslow/incorrect_later.scmsession 2> /dev/null && exit 1

assert_equal `./subs testslow/multiline_combination.scm` "26"

# TODO: running a file with too many open brackets fails
# TODO: running a file with too many close brackets fails



# Exit with a success code: prevent error value leaking from above
exit 0
